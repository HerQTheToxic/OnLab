@page "/"
@inject IFilmService FilmService
@inject NavigationManager NavigationManager
@inject ITeremService TeremService
@inject ISzekService SzekService
@inject ISzineszService SzineszService
@using Syncfusion.Blazor.Grids;
@using Syncfusion.Blazor.Buttons;
@using System.ComponentModel.DataAnnotations;
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Data
@using Syncfusion.Blazor.Popups
@using Syncfusion.Blazor.Buttons  

<div class="padding">
<PageTitle>Filmek</PageTitle>



<div class="padding">
    <h2>Filmek</h2>
    <div>
        <label class="showhide" style="padding: 10px 5px 10px 0"> Film neve </label>
                <SfSwitch ValueChange="@((Syncfusion.Blazor.Buttons.ChangeEventArgs<bool> args) => { change("Film neve", args); })" @bind-Checked="@nyitva" TChecked="bool"></SfSwitch>

        <SfGrid @ref="Grid" DataSource="@tablazatFilmek" AllowPaging="true" AllowReordering="true" AllowSorting="true" AllowFiltering="true">
            <GridPageSettings PageSize="5"></GridPageSettings>

            <GridColumns>
                <GridColumn Field=@nameof(Film.Nev) HeaderText="Film neve"  Width="120"></GridColumn>
                <GridColumn Field=@nameof(Film.Gyarto) HeaderText="Film gyartó"  Width="120"></GridColumn>                   
                <GridColumn Field=@nameof(Film.Ertekeles) HeaderText="Értékelés" Width="120"></GridColumn>
                <GridColumn Field=@nameof(Film.Id) HeaderText="Film id" Width="120"></GridColumn>
                <GridColumn HeaderText="Info" TextAlign="TextAlign.Center" Width="120">
                    <Template>
                        @{
                            var film = (context as Film);   
                            <button class="btn btn-primary" @onclick="(()=>ShowFilm(film.Id))">Info</button>
                        }
                    </Template>
                </GridColumn>
            </GridColumns>
     </SfGrid>
    </div>

</div>

<div class="padding">
<h3>Film hozzáadása</h3>

 <EditForm Model="@seged" OnValidSubmit="FormValidSubmit">
     <DataAnnotationsValidator />
     <ValidationSummary />
     <div class="form-group">
         <label for="nev">Film neve:</label>
         <SfTextBox ID="nev" @bind-Value="seged.Nev"></SfTextBox>
     </div>
     <div class="form-group">
         <label for="ertekeles">Film értékelése:</label>
         <SfNumericTextBox ID="ertekeles" @bind-Value="seged.Ertekeles"></SfNumericTextBox>
     </div>
     <div class="form-group">
         <label for="gyarto">Film gyártója:</label>
         <SfTextBox ID="gyarto" @bind-Value="seged.Gyarto"></SfTextBox>
     </div>
     <SfButton ID="btn">Submit</SfButton>
 </EditForm>

 
<SfTooltip Target="#btn" >
    <TooltipTemplates>
        <Content>
            <div id='gomb'>
                <div class='info'>
                    <h3 style='margin-top:10px'>Film hozzáadása</h3>
                    <div>
                        <div style='float:left;width:57%'>
                            A <a href='https://hu.wikipedia.org/wiki/Film' target='blank'>Filmeket</a>
                             sok ember szereti
                        </div>
                        <div id='bird'><img src='https://budapestflow.b-cdn.net/wp-content/uploads/2016/02/puskin_faninfo.hu_.jpg' width='125' height='125' /></div>
                    </div>
                    <div style="clear:both">
                        <p> Adj hozzá te is egy filmet a sok közé</p>
                    </div>
                </div>
            </div>
        </Content>
    </TooltipTemplates>
</SfTooltip>


<SfTooltip ID="tooltip" IsSticky="true" Target="#target" Content="@Content">
    <div id='container'>
        <p>
            Ez a gomb
            <a id="target">
                <u>environmentally friendly</u>
            </a> mert az elkészítése nem okozott semmilyen kárt sem a környezetben, sem a természetben
        </p>
    </div>
</SfTooltip>

 </div>
</div>





@code {


    string Content = "<div><b>Environmentally friendly</b> or environment-friendly, (also referred to as eco-friendly, nature-friendly, and green) are marketing and sustainability terms referring to goods and services, laws, guidelines and policies that inflict reduced, minimal, or no harm upon ecosystems or the environment.</div>";

    protected override async Task OnInitializedAsync()
    {
        await FilmService.GetFilmek();
        //await FilmService.GetFilmTermek(2);
        await SzineszService.GetSzineszek();
        await SzekService.GetSzekek();
        await TeremService.GetTermek();
        tablazatFilmek = FilmService.Filmek;
        //tablazatTermek = FilmService.Termek;
    }
    protected override async Task OnParametersSetAsync()
    {

        await FilmService.GetFilmek();
        //await FilmService.GetFilmTermek(2);
        await SzineszService.GetSzineszek();
        await SzekService.GetSzekek();
        await TeremService.GetTermek();
        tablazatFilmek = FilmService.Filmek;
        //tablazatTermek = FilmService.Termek;


    }

    void ShowFilm(int id)
    {
        NavigationManager.NavigateTo($"film/{id}");    
    }
    void ShowSzinesz(int id)
    {
        NavigationManager.NavigateTo($"szinesz/{id}");    
    }
    void ShowSzek(int id)
    {
        NavigationManager.NavigateTo($"szek/{id}");    
    }
    void ShowTerem(int id)
    {
        NavigationManager.NavigateTo($"terem/{id}");    
    }

    //elso tablazatnak az adatai
    public List<Film> tablazatFilmek { get; set; }
    public List<Terem> tablazatTermek { get; set; }

    SfGrid<Film> Grid{ get; set; }

    //Validáció

    private segedFilm seged = new segedFilm();

    public class segedFilm
    {
        [Required(ErrorMessage = "Kérlek add meg a film nevét.")]
        public string Nev { get; set; }

        [Required(ErrorMessage = "Kérlek add meg a film értékelését. (0-10-ig)")]
        [Range(0, 10.0)]
        public double Ertekeles { get; set; }

        [Required(ErrorMessage = "Kérlek add meg a film gyártóját")]
        public string Gyarto { get; set; }

    }

    private async void FormValidSubmit(EditContext context)
    {
        Film segedfilm = new Film();
        segedfilm.Nev = seged.Nev;
        segedfilm.Ertekeles = seged.Ertekeles;
        segedfilm.Gyarto = seged.Gyarto;

        FilmService.CreateFilm(segedfilm);


        refresh();
    } 

    private void refresh()
    {
        Grid.Refresh();
    }

    Boolean nyitva = true;
    public void change(string name, Syncfusion.Blazor.Buttons.ChangeEventArgs<bool> args)
    {
        if (args.Checked)
        {
            this.Grid.ShowColumns(name);
        }
        else {
            this.Grid.HideColumns(name);
        }
    }


}

<style>
.padding {
  padding-top: 20px;
  padding-right: 20px;
  padding-left: 20px;
}

</style>