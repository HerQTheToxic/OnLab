@page "/terem"
@page "/terem/{id:int}"
@inject ITeremService TeremService
@inject NavigationManager NavigationManager
@using Syncfusion.Blazor.Grids;
@using Syncfusion.Blazor.Buttons;
@using System.ComponentModel.DataAnnotations;
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Data

<div class="padding">
    <div class="padding">
@if (Id == null)
{
    <h3>Uj terem</h3>
}
else
{
    <h3>A(z) @terem.TeremNev terem székei</h3>
}

<SfGrid @ref="Grid" DataSource="@szeklista" AllowPaging="true" AllowSorting="true" AllowFiltering="true">
    <GridPageSettings PageSize="5"></GridPageSettings>

    <GridColumns>
        <GridColumn Field=@nameof(Szek.Szam) HeaderText="Szék száma"  Width="120"></GridColumn>
        <GridColumn Field=@nameof(Szek.Foglalt) HeaderText="Foglalt?"  Width="120"></GridColumn>                   
        <GridColumn HeaderText="" TextAlign="TextAlign.Center" Width="120">
            <Template>
                @{
                    var szek = (context as Szek);   
                    
                    @if(szek.Foglalt){
                        <button class="btn btn-danger" @onclick="(()=>Foglal(szek))">Foglalás törlése</button>
                    }
                    else{
                        <button class="btn btn-primary" @onclick="(()=>Foglal(szek))">Foglal</button>
                    }


                }
            </Template>
        </GridColumn>
    </GridColumns>
    
</SfGrid>

<h3>Teremben lejátszott film szerkesztése:</h3>

 <EditForm Model="@segedTer" OnValidSubmit="FormValidSubmit">
     <DataAnnotationsValidator />
     <ValidationSummary />

     <div class="form-group">
         <label for="Teremid">Film ID:</label>
         <SfNumericTextBox ID="Teremid" @bind-Value="segedTer.Teremid"></SfNumericTextBox>
     </div>
 
     <SfButton>Submit</SfButton>
    <SfButton class="btn btn-primary" @onclick="(()=>ShowFilmek())">Vissza</SfButton>
    <SfButton class="btn btn-primary" @onclick="(()=>ShowSzekek(terem.Id))">Terem fogalaltsága</SfButton>
 </EditForm>




</div>
</div>

@code {
    [Parameter]
    public int? Id{ get; set; }

    SfGrid<Szek> Grid{ get; set; }
    Mozi.Shared.Terem terem=new Mozi.Shared.Terem();
    public List<Szek> szeklista { get; set; }



    protected override async Task OnParametersSetAsync()
    {
        if(Id!= null)
        {
            await TeremService.GetTeremSzekek((int)Id);
            szeklista = TeremService.Szekek;
            terem = await TeremService.GetSingleTerem((int)Id);

        }
    }
    void ShowFilmek()
    {
        NavigationManager.NavigateTo("filmek");    
    }
    void ShowSzekek(int id)
    {
        NavigationManager.NavigateTo($"terem/{id}/szekek");    
    }
    void Foglal(Szek szek)
    {
        szek.Foglalt = !szek.Foglalt;
        TeremService.UpdateTeremSzek(szek);
        Grid.Refresh();
    }



    segedTerem segedTer = new segedTerem();
    public class segedTerem
    {
        [Required(ErrorMessage = "Kérlek add meg a film ID-ját, amit ebben a teremben szeretnél lejátszani. (0-10-ig)")]
        public int Teremid { get; set; }
    }

    private async void FormValidSubmit(EditContext context)
    {
        Terem segedTerem = new Terem();
        System.Diagnostics.Debug.WriteLine(terem.Id);
        segedTerem.Id = terem.Id;
        segedTerem.TeremNev = terem.TeremNev;
        segedTerem.FilmId = segedTer.Teremid;
        TeremService.UpdateTerem(segedTerem);
        NavigationManager.NavigateTo("filmek");

    }

}

<style>
.padding {
  padding-top: 20px;
  padding-right: 20px;
  padding-left: 20px;
}

</style>