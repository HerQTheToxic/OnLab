@page "/dialog"
@using Syncfusion.Blazor.Popups
@using Syncfusion.Blazor.Buttons

<div id="target" style="height:100%">
    <SfDialog Height="30%" Width="400px" Target="#target" AllowDragging="true" EnableResize="true"
              ResizeHandles="@dialogResizeDirections" @bind-Visible="NagyDialogVisibility">
        <DialogTemplates>
            <Header>
                <div id="template" class="e-icon-settings">Dialógus ablak</div>
            </Header>
            <Content>
                <div class="dialogContent">
                    <span class="dialogText">Nyomj rá az új gombra, hogy új ablak jöjjön elő</span>
                </div>
            </Content>
            <FooterTemplate>

                <div id="#Uj">
                    <SfButton OnClick="@UjButtonClick">Új</SfButton>
                    <SfButton OnClick="@CloseButtonClick">Bezár</SfButton>
                    

                </div>
            </FooterTemplate>
        </DialogTemplates>
        <DialogPositionData X="Left" Y="Top"></DialogPositionData>
        <DialogAnimationSettings Effect="DialogEffect.FlipXUp"></DialogAnimationSettings>
    </SfDialog>
    <SfDialog Height="215px" Width="200px" Target="#target" @bind-Visible="SuccessDialogVisibility">
        <DialogTemplates>
            <Header>
                <div id="template" class="e-icon-settings">Új ablak</div>
            </Header>

        </DialogTemplates>
        <DialogButtons>
             <DialogButton Content="Bezár" IsPrimary="true" OnClick="@CloseButtonClickKicsiAblak" />
        </DialogButtons>
    </SfDialog>
</div>

@code

{

    private ResizeDirection[] dialogResizeDirections { get; set; } = new ResizeDirection[] { ResizeDirection.All };


    private bool SuccessDialogVisibility { get; set; } = false;
    private bool NagyDialogVisibility { get; set; } = true;

    private void UjButtonClick()
    {
        this.SuccessDialogVisibility = true;
    }

    private void CloseButtonClick(object arg)
    {
            this.NagyDialogVisibility = false;
            this.StateHasChanged();

    }
        private void CloseButtonClickKicsiAblak(object arg)
    {
            this.SuccessDialogVisibility = false;
            this.StateHasChanged();

    }


}

<style>
    #target {
        min-height: 1200px;
    }
    .e-dialog .e-dlg-header-content + .e-dlg-content {
        padding-top: 2px;
    }
    .e-dlg-header .e-icon-settings, .e-icon-btn {
        color: #fff;
    }
    .e-dialog .e-dlg-header-content {
        background-color: #3f51b5;
    }
    .e-btn, .e-css.e-btn {
        font-size: 13px;
        background-color: #3f51b5;
    }
    .e-dialog .e-dlg-header-content {
        padding: 8px;
        border-radius: 0px;
    }
    .e-dialog .e-icon-dlg-close::before {
        font-size: 15px;
    }
    #Ujbutton {
        top: 2px;
        position: relative;
    }
    .e-footer-content .e-input-group {
        width: 75%;
        float: left;
    }
    .e-dialog .e-footer-content {
        border-top: 0.5px solid rgba(0, 0, 0, 0.42);
        padding: 15px;
    }
    .e-dialog .e-dlg-header {
        position: relative;
    }
    #template {
        display: inline-block;
        padding: 0px 8px;
        vertical-align: middle;
        line-height: 40px;
        font-weight: 600;
        font-size: 17px;
    }
    .e-icon-settings.e-icons {
        float: left;
        position: relative;
        left: 14%;
        top: -33px;
    }
    .dialogContent .dialogText {
        font-size: 16px;
        text-align: justify;
        font-style: initial;
        display: block;
        font-weight: 500;
    }
    .dialogContent {
        display: block;
        font-size: 16px;
        text-align: center;
        font-style: italic;
        padding: 3%;
        position: relative;
        top: 25px;
    }
</style>